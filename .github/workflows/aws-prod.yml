name: AWS-Deploy-Push-Prod

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number for the Docker image tag'
        required: true
env:
  REGISTRY: '368076259134.dkr.ecr.us-east-1.amazonaws.com'
  REPOSITORY: 'sdk-prod'
  IMAGE_TAG: ${{ github.event.repository.name }}-${{ github.event.inputs.version_number }}
  GCP_PROJECT_ID: "topia-gcp" #${{ secrets.GCP_PROJECT_ID }}
  GCP_ARTIFACTORY: 'us-west1-docker.pkg.dev'
  GCP_REPOSITORY: 'sdk-apps-prod'
        
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.inputs.version_number }}
        
      - uses: actions/setup-node@v4.0.1
        with:
          node-version: 20.10
          cache: 'npm'
      - run: npm i
      - run: CI=false npm run build
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: arn:aws:iam::368076259134:role/github-actions-role
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.7.1
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
      
      - name: Image Metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}
          tags: |
            type=raw,value=${{ github.event.repository.name }}-${{ github.event.inputs.version_number }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64 
          tags: ${{ steps.metadata.outputs.tags }}
          

      # - name: Build and  tag
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG  .
          
      # - name: push docker image to Amazon ECR
      #   run: |
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
